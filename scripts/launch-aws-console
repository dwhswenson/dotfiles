#!/usr/bin/env python

import argparse
import configparser
import os
import pathlib
import webbrowser

def make_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument("--profile", type=str)
    return parser

def get_account(config, profile_name):
    return config[f"profile {profile_name}"]["sso_account_id"]

def get_role(config, profile_name):
    return config[f"profile {profile_name}"]["sso_role_name"]

def get_url_base(config, profile_name):
    session = config[f"profile {profile_name}"]["sso_session"]
    return config[f"sso-session {session}"]["sso_start_url"]

def load_config():
    config_file = str(pathlib.Path.home() / ".aws/config")
    config = configparser.RawConfigParser()
    config.read(config_file)
    return config

if __name__ == "__main__":
    parser = make_parser()
    opts = parser.parse_args()

    if not (profile_name := opts.profile):
        profile_name = os.environ.get("AWS_DEFAULT_PROFILE")

    config = load_config()
    account = get_account(config, profile_name)
    role = get_role(config, profile_name)
    url_base = get_url_base(config, profile_name)
    url = f"{url_base}/console?account_id={account}&role_name={role}"
    webbrowser.open(url)
