#!/bin/bash

# find the post ID (if it has one)
# *** should change this so that it requires POSTID in BLOG METADATA section
postID=`grep "POSTID" $1 | sed 's/POSTID\: //'`

sendFlag=""
if [ "$postID" ]
then
    sendFlag="-E $postID"
    echo "Editing pre-existing post (ID $postID) using file $1"
else
    sendFlag="-N"
    echo "Creating new post with file $1"
fi

postedID=`mtformat $1 | mtsend.py $sendFlag | tail -n 1 | grep -E "^[0-9]*$"`

if [ ! "$postID" ]; then
    postID=$postedID
fi

echo ""

# now add metadata from post # postID to the file $1
echo "Syncronizing metadata with the server (making changes to file $1)"

# first find the end of the metadata in $1
metaln=`grep -n '== BLOG METADATA -->' $1 | sed 's/\([0-9]*\):.*/\1/'`
origtot=`wc -l $1 | sed 's/^\ *\([0-9][0-9]*\)\ .*/\1/'`

# now download the posted version of $1
mtsend.py -G $postID > ${1}.${postID}.hbtmp
dashln=`grep -n '\-\-\-\-\-' ${1}.${postID}.hbtmp | sed 's/\([0-9]*\)\:.*/\1/'`
total=`wc -l ${1}.${postID}.hbtmp | sed 's/^\ *\([0-9][0-9]*\)\ .*/\1/'`

# put it all together into a new version of $1
echo "<!-- BLOG METADATA" > ${1}.tmp
head -n $(( $dashln - 1 )) ${1}.${postID}.hbtmp >> ${1}.tmp
echo "== BLOG METADATA -->" >> ${1}.tmp
tail -n $(( $origtot - $metaln )) $1 >> ${1}.tmp

echo "Cleaning up...."
mv ${1}.tmp $1 && rm ${1}.${postID}.hbtmp



#echo ""
#echo "Searching $1 for files which need to be uploaded to the server...."

#echo ""
#echo "Launching SFTP. You may be prompted for your password."

#echo "The following files were uploaded to your server:"
#echo "ERROR! NOT FOUND ON LOCAL OR REMOTE SERVER:"

